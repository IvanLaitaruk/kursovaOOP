#pragma once

#include <string>
#include <vector>
#include <cstring>
#include <fstream>
#include <time.h>
#include "TrainException.h"

#define WAY_SIZE 3 // кількість проміжних станцій, через які проїде потяг
#define MINUTES_IN_HOUR 60
#define HOURS_IN_DAY 24
#define DAYS_IN_MONTH 31

namespace worksheet
{
	using namespace std;
	using namespace System;
	using namespace System::Windows::Forms;
	using namespace System::Drawing;
	//--------------------------------------------------------------------------------------------------------------
	//повертає значення true якшо час toFind знаходиться між значеннями часу start та end
	bool findBetweenTime(tm& toFind, tm& start, tm& end);
	//--------------------------------------------------------------------------------------------------------------
	//повертає час в хвилинах переведений із структури tm
	long convertTimeToInt(tm& time);
	//--------------------------------------------------------------------------------------------------------------
	// станція складається з місця, часу виїзду та прибуття
	struct Station
	{
		string place;
		tm t_departure;
		tm t_arrival;
	};
	//--------------------------------------------------------------------------------------------------------------
	//повертає стрічку у форматі "деньМісяця.місяць година:хвилина"
	string formatStringTime(tm& time);
	//--------------------------------------------------------------------------------------------------------------
	//повертає стрічку у форматі "місце (деньМісяця.місяць година:хвилини, деньМісяця.місяць година:хвилини)"
	string formatStringStation(Station& tr);
	//--------------------------------------------------------------------------------------------------------------
class Train
{
	// потяг складається з свого номеру, станції відправлення та прибуття, проміжних станцій та загальної відстані
private:
	string id;
	Station departure;
	Station arrival;
	vector<Station> way;
	double distance; //у кілометрах

	//--------------------------------------------------------------------------------------------------------------
	//перевірка стрічки на недопустимі символи(цифри,№, % і т.д.)
	//використовується для перевірки правильності вхідних даних місць станцій
	//створює виняткову ситуацію у разі вмісту цих символі
	void CheckStrForUnacSymbols(string str);
	//--------------------------------------------------------------------------------------------------------------
public:
	//--------------------------------------------------------------------------------------------------------------
	//конструктор за замовчуванням
	Train();
	//--------------------------------------------------------------------------------------------------------------
	//створення екземпляра потягу при зчитуванні стрічки
	Train(char* newTrain);
	//--------------------------------------------------------------------------------------------------------------
	//конструктор копіювання
	Train(const Train& train);
	//--------------------------------------------------------------------------------------------------------------
	//перевірка наявності станції, через який курсує потяг
	//повертає true при наявності цієї станції та false якщо вона відсутня
	bool findStation(string station);
	//--------------------------------------------------------------------------------------------------------------
	//перевірка наявності початкової станції, через який курсує потяг
	//повертає true при наявності цієї початкової станції та false якщо вона відсутня
	bool findDeparture(string departure);
	//--------------------------------------------------------------------------------------------------------------
	//перевірка наявності кінцевої станції, через який курсує потяг
	//повертає true при наявності цієї кінцевої станції та false якщо вона відсутня
	bool findArrival(string arrival);
	//--------------------------------------------------------------------------------------------------------------
	//повертає середню швидкість потяга в км/год
	double getMediumSpeed();
	//--------------------------------------------------------------------------------------------------------------
	//геттери класу
	Station& getDeparture() { return this->departure; }
	Station& getArrival() { return this->arrival; }
	vector<Station>& getWay() { return this->way; }
	string getId() { return this->id;}
	double getDistance() { return this->distance; }
	//--------------------------------------------------------------------------------------------------------------
	//сеттери класу
	void setId(string id) { this->id = id; }
	void setDeparture(Station& dep) { this->departure = dep; }
	void setArrival(Station& arr) { this->arrival = arr; }
	void setWay(vector<Station>& way) { this->way = way; }
	void setDistance(double distance) { this->distance = distance; }
	//--------------------------------------------------------------------------------------------------------------
	//повертає посилання на задану станцію, якщо вона знайдена серед станції відправлення, 
	//приїзду або проміжних станцій
	Station& getStation(Station station);
	//--------------------------------------------------------------------------------------------------------------
	//повертає стрічку у форматі "| id | Виїзд | Прибуття | Проміжні станції | Час виїзду | Час прибуття | Дистанція"
	string getTrainStr();
	//--------------------------------------------------------------------------------------------------------------
};
}